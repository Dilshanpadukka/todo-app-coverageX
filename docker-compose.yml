services:
  database:
    image: mysql:8.0
    container_name: todo-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: todo_coveragex
      MYSQL_USER: todo_user
      MYSQL_PASSWORD: todo_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./backend/src/main/resources/data.sql:/docker-entrypoint-initdb.d/02-data.sql:ro
    networks:
      - todo-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u todo_user -ptodo_password"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: todo-backend
    restart: unless-stopped
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://database:3306/todo_coveragex?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: todo_user
      SPRING_DATASOURCE_PASSWORD: todo_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "false"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
      SERVER_PORT: 8080
      SPRING_PROFILES_ACTIVE: docker
      LOGGING_LEVEL_COM_DILSHAN_COVERAGEX: INFO
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: WARN
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: WARN
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - todo-network
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/actuator/health | grep '\"status\":\"UP\"' || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 180s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: todo-frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: /api
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - todo-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 45s

volumes:
  mysql_data:
    driver: local

networks:
  todo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
